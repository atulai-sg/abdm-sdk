plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	// id 'com.diffplug.gradle.spotless' version '4.5.1'
}

group = 'com.abdm'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // implementation 'com.diffplug.spotless:spotless-plugin-gradle:6.19.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

// spotless {
//   java {
//     // Use the default importOrder configuration
//     importOrder()
//     // optional: you can specify import groups directly
//     // note: you can use an empty string for all the imports you didn't specify explicitly, '|' to join group without blank line, and '\\#` prefix for static imports
//     importOrder('java|javax', 'com.acme', '', '\\#com.acme', '\\#')
//     // optional: instead of specifying import groups directly you can specify a config file
//     // export config file: https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md#creating-spotlessimportorder
//     importOrderFile('eclipse-import-order.txt') // import order file as exported from eclipse

//     removeUnusedImports()

//     // Cleanthat will refactor your code, but it may break your style: apply it before your formatter
//     cleanthat()          // has its own section below

//     // Choose one of these formatters.
//     googleJavaFormat()   // has its own section below

//     formatAnnotations()  // fixes formatting of type annotations, see below

//     licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
//   }
// }
